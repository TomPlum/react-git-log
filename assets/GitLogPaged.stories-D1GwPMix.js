import{r as f,j as t}from"./iframe-CSNM2715.js";import{c as h,u as j,s as b,S as q,L as R,a as S,G as x}from"./StoryHeader-BVd36jqL.js";import"./index-SPKIe_xL.js";const P="_pagination_3vy2g_1",D="_pages_3vy2g_6",H="_pageButton_3vy2g_13",L="_active_3vy2g_18",B="_chevronButton_3vy2g_21",F="_disabled_3vy2g_27",i={pagination:P,pages:D,pageButton:H,active:L,chevronButton:B,disabled:F},v=({theme:e,pageSize:r,currentPage:a,total:d,onChangePage:l})=>{const n=Math.ceil(d/r),m=Array.from({length:n},(o,u)=>u+1),p=f.useMemo(()=>{const u=Math.floor(5.5);let c=Math.max(1,a-u),s=c+11-1;return s>n&&(s=n,c=Math.max(1,s-11+1)),m.slice(c-1,s)},[a,m,n]);return t.jsxs("div",{className:i.pagination,children:[t.jsx("button",{disabled:a===1,className:h(i.chevronButton,{[i.disabled]:a===1}),onClick:()=>l(1),style:{color:e==="dark"?"white":"black"},children:"<<"}),t.jsx("button",{disabled:a===1,className:h(i.chevronButton,{[i.disabled]:a===1}),onClick:()=>l(a-1),style:{color:e==="dark"?"white":"black"},children:"<"}),t.jsx("div",{className:i.pages,children:p.map(o=>t.jsx("button",{onClick:()=>l(o),className:h(i.pageButton,{[i.active]:o===a}),style:{color:e==="dark"?"white":"black"},title:`Go to page ${o}`,children:o},o))}),t.jsx("button",{className:h(i.chevronButton,{[i.disabled]:a===n}),disabled:a===n,onClick:()=>l(a+1),style:{color:e==="dark"?"white":"black"},children:">"}),t.jsx("button",{className:h(i.chevronButton,{[i.disabled]:a===n}),disabled:a===n,onClick:()=>l(n),style:{color:e==="dark"?"white":"black"},children:">>"})]})};try{v.displayName="Pagination",v.__docgenInfo={description:"",displayName:"Pagination",props:{theme:{defaultValue:null,description:"",name:"theme",required:!0,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'}]}},currentPage:{defaultValue:null,description:"",name:"currentPage",required:!0,type:{name:"number"}},pageSize:{defaultValue:null,description:"",name:"pageSize",required:!0,type:{name:"number"}},total:{defaultValue:null,description:"",name:"total",required:!0,type:{name:"number"}},onChangePage:{defaultValue:null,description:"",name:"onChangePage",required:!0,type:{name:"(pageNumber: number) => void"}},onChangePageSize:{defaultValue:null,description:"",name:"onChangePageSize",required:!0,type:{name:"(pageSize: number) => void"}}}}}catch{}const w=e=>{const[r,a]=f.useState(1),[d,l]=f.useState(20),{theme:n,loading:m,colours:p,entries:o,branch:u,buildUrls:c,repository:s,headCommitHash:z,backgroundColour:C,handleChangeTheme:G,handleChangeColors:V,handleChangeRepository:k}=j({isServerSidePaginated:!0});return t.jsxs("div",{style:{background:C},className:b.container,children:[t.jsx(q,{theme:n,colours:p,repository:s,onChangeTheme:G,onChangeColours:V,onChangeRepository:k,children:t.jsx("div",{style:{marginTop:20},children:t.jsx(v,{theme:n,pageSize:d,currentPage:r,total:(o==null?void 0:o.length)??0,onChangePage:y=>a(y),onChangePageSize:y=>l(y)})})}),m&&t.jsx("div",{className:b.loading,children:t.jsx(R,{theme:n})}),!m&&o&&t.jsxs(S,{...e,theme:n,entries:o.slice(d*(r-1),d*r),branchName:u,colours:p.colors,headCommitHash:z,classes:{containerStyles:{background:C},containerClass:b.gitLogContainer},indexStatus:{added:e.indexStatusFilesAdded,modified:e.indexStatusFilesModified,deleted:e.indexStatusFilesDeleted},urls:c,children:[e.renderStrategy==="html-grid"&&t.jsx(x.GraphHTMLGrid,{nodeSize:e.nodeSize,nodeTheme:e.nodeTheme,orientation:e.orientation,enableResize:e.enableResize,showCommitNodeHashes:e.showCommitNodeHashes,showCommitNodeTooltips:e.showCommitNodeTooltips}),e.renderStrategy==="canvas"&&t.jsx(x.GraphCanvas2D,{nodeSize:e.nodeSize,nodeTheme:e.nodeTheme,orientation:e.orientation,enableResize:e.enableResize}),e.showTable&&t.jsx(S.Table,{className:b.table,timestampFormat:e.timestampFormat})]})]})};try{w.displayName="GitLogPagedDemo",w.__docgenInfo={description:"",displayName:"GitLogPagedDemo",props:{showTable:{defaultValue:null,description:"",name:"showTable",required:!0,type:{name:"boolean"}},showCommitNodeHashes:{defaultValue:null,description:"",name:"showCommitNodeHashes",required:!0,type:{name:"boolean"}},renderStrategy:{defaultValue:null,description:"",name:"renderStrategy",required:!0,type:{name:"enum",value:[{value:'"html-grid"'},{value:'"canvas"'}]}},nodeTheme:{defaultValue:null,description:`The theme to apply the commit node
elements in the graph.`,name:"nodeTheme",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"plain"'}]}},enableResize:{defaultValue:{value:"false"},description:`Enables the graphs horizontal width
to be resized.`,name:"enableResize",required:!1,type:{name:"boolean | undefined"}},nodeSize:{defaultValue:null,description:`The diameter, in pixels, of the
commit node elements rendered on
the graph.`,name:"nodeSize",required:!1,type:{name:"number | undefined"}},orientation:{defaultValue:null,description:`The orientation of the graph.

Normal mode draws the graph from
left to right, so the checked-out
branch is on the left-hand side.

Flipped mode inverts the graph
in the y-axios so it's drawn from
right to left with the checked-out
branch on the right-hand side.`,name:"orientation",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"normal"'},{value:'"flipped"'}]}},timestampFormat:{defaultValue:{value:"ISO-8601"},description:`A timestamp format string passed to DayJS
to format the timestamps of the commits
in the log table.`,name:"timestampFormat",required:!1,type:{name:"string | undefined"}},row:{defaultValue:null,description:`Overrides the table row
with a custom implementation.

Your custom row elements height
should be divisible by 2 so it
renders inline with the graph
nodes.

Passing this in also causes the
table container to no longer use
a CSS Grid. This gives you the option
to use any styling yourself such as
flex-box.

Some properties are injected into the
wrapping element of your custom row
element to ensure basic layout functions
as expected.`,name:"row",required:!1,type:{name:"CustomTableRow | undefined"}},className:{defaultValue:null,description:`A class name passed to the tables'
wrapping container element.`,name:"className",required:!1,type:{name:"string | undefined"}},styles:{defaultValue:null,description:`A React CSS styling object passed to
the various elements of the table.`,name:"styles",required:!1,type:{name:"GitLogTableStylingProps | undefined"}}}}}catch{}const A={title:"GitLogPaged",component:S,parameters:{layout:"fullscreen"},args:{entries:[],showTable:!0,branchName:"release",showCommitNodeHashes:!1,showHeaders:!0,enableResize:!1,enablePreviewedCommitStyling:!0,enableSelectedCommitStyling:!0,nodeTheme:"default",showGitIndex:!0,renderStrategy:"html-grid",nodeSize:20,orientation:"normal",onSelectCommit:e=>{console.info(`Selected commit ${e==null?void 0:e.hash}`)},defaultGraphWidth:120,rowSpacing:0},argTypes:{entries:{name:"Git Log Entries",table:{category:"Required Props"}},branchName:{name:"Branch Name",table:{category:"Required Props"}},showCommitNodeHashes:{name:"Show Commit Hashes",table:{category:"Visibility"}},showTable:{name:"Show Table",table:{category:"Visibility"}},showHeaders:{name:"Show Headers",type:"boolean",table:{category:"Visibility"}},nodeTheme:{name:"Node Style",table:{category:"Visibility"},control:"radio",options:{Default:"default",Plain:"plain"}},showGitIndex:{name:"Show Git Index",type:"boolean",table:{category:"Visibility"}},renderStrategy:{name:"Graph Render Strategy",table:{category:"Visibility"},control:"radio",options:{"HTML Grid":"html-grid",Canvas2D:"canvas"}},enableSelectedCommitStyling:{name:"Enable Selection Styling",type:"boolean",table:{category:"Visibility"}},enablePreviewedCommitStyling:{name:"Enable Preview Styling",type:"boolean",table:{category:"Visibility"}},enableResize:{name:"Enable Resize",table:{category:"Dimensions"}},rowSpacing:{name:"Row Spacing",table:{category:"Dimensions"},control:{type:"range",min:0,max:50}},defaultGraphWidth:{name:"Graph Width",table:{category:"Dimensions"},control:{type:"range",min:0,max:500}},nodeSize:{name:"Graph Node Size",table:{category:"Dimensions"},control:{type:"range",min:8,max:30,step:2}},orientation:{name:"Graph Orientation",table:{category:"Dimensions"},control:"radio",options:{Normal:"normal",Flipped:"flipped"}},onSelectCommit:{name:"onSelectCommit",table:{category:"Callback Functions"}},onPreviewCommit:{name:"onPreviewCommit",table:{category:"Callback Functions"}},theme:{table:{disable:!0}},colours:{table:{disable:!0}},urls:{table:{disable:!0}},classes:{table:{disable:!0}},indexStatus:{table:{disable:!0}},headCommitHash:{table:{disable:!0}}}},g={render:e=>t.jsx(w,{...e})};var _,N,T;g.parameters={...g.parameters,docs:{...(_=g.parameters)==null?void 0:_.docs,source:{originalSource:`{
  render: args => <GitLogPagedDemo {...args} />
}`,...(T=(N=g.parameters)==null?void 0:N.docs)==null?void 0:T.source}}};const O=["Demo"];export{g as Demo,O as __namedExportsOrder,A as default};
