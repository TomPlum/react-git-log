name: Demo Website

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build Library
        run: npm run build --workspace=@tomplum/react-git-log

      - name: Run Library Unit Tests
        env:
          TZ: UTC
        run: npm run test:unit:ci --workspace=@tomplum/react-git-log
        working-directory: packages/library

      - name: Run Demo Unit Tests
        env:
          TZ: UTC
        run: npm run test --workspace=@tomplum/react-git-log-demo
        working-directory: packages/demo

      - name: Run Integration Tests
        env:
          TZ: UTC
        run: npm run test:integration:ci --workspace=@tomplum/react-git-log
        working-directory: packages/library

      - name: SonarCloud Analysis
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Store Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: packages/library/coverage/lcov.info

      - name: Snyk
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: monitor --severity-threshold=high

      - name: Build Storybook
        run: npm run build-storybook --workspace=@tomplum/react-git-log-demo

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./packages/demo/storybook-static

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get package version
        id: package_version
        run: echo "VERSION=$(jq -r .version packages/library/package.json)" >> $GITHUB_ENV

      - name: Check if version exists on NPM
        id: check_version
        run: |
          if npm show @tomplum/react-git-log@${VERSION} > /dev/null 2>&1; then
            echo "VERSION_EXISTS=true" >> $GITHUB_ENV
          else
            echo "VERSION_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Publish to NPM
        if: env.VERSION_EXISTS == 'false'
        run: npm publish --workspace=@tomplum/react-git-log --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}