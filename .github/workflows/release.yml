name: Demo Website

on:
  push:
    branches:
      - main

jobs:
  build-library:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - run: npm run build --workspace=@tomplum/react-git-log
      - name: Store Built Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: ./packages/library/dist

  build-storybook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - run: npm run build-storybook --workspace=@tomplum/react-git-log-demo
      - name: Store Storybook Statics
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: ./packages/demo/storybook-static

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - run: npm run lint

  docs:
    runs-on: ubuntu-latest
    needs: [build-library, lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - run: npm run docs --workspace=@tomplum/react-git-log
        working-directory: packages/library

  unit-tests-library:
    runs-on: ubuntu-latest
    needs: [build-library, lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - run: npm run test:unit:ci --workspace=@tomplum/react-git-log
        working-directory: packages/library
      - name: Store LCOV Info
        uses: actions/upload-artifact@v4
        with:
          name: line-coverage-info
          path: packages/library/coverage/lcov.info

  unit-tests-demo:
    runs-on: ubuntu-latest
    needs: [build-storybook, lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - run: npm run test --workspace=@tomplum/react-git-log-demo
        working-directory: packages/demo

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build-library, build-storybook, lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - run: npm run test:integration:ci --workspace=@tomplum/react-git-log
        working-directory: packages/library

  sonarcloud:
    runs-on: ubuntu-latest
    needs: [unit-tests-library, integration-tests, unit-tests-demo]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Download LCOV Info Artifact
        uses: actions/download-artifact@v5
        with:
          name: line-coverage-info
          path: packages/library/coverage
      - name: SonarCloud Analysis
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/library
    needs: build-library
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'
      - run: npm install
      - uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: 'monitor'
          json: true
          args: --severity-threshold=high --all-projects

  deploy-storybook:
    runs-on: ubuntu-latest
    needs: [sonarcloud, snyk]
    steps:
      - uses: actions/checkout@v4
      - name: Download Statics
        uses: actions/download-artifact@v5
        with:
          name: storybook-static
          path: ./packages/demo/storybook-static
      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./packages/demo/storybook-static

  publish-library:
    runs-on: ubuntu-latest
    needs: [sonarcloud, snyk]
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get package version
        id: package_version
        run: echo "VERSION=$(jq -r .version packages/library/package.json)" >> $GITHUB_ENV

      - name: Check if version exists on NPM
        id: check_version
        run: |
          if npm show @tomplum/react-git-log@${VERSION} > /dev/null 2>&1; then
            echo "VERSION_EXISTS=true" >> $GITHUB_ENV
          else
            echo "VERSION_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Download Production Build
        uses: actions/download-artifact@v5
        with:
          name: production-build
          path: ./packages/library/dist

      - name: Publish to NPM
        if: env.VERSION_EXISTS == 'false'
        run: npm publish --workspace=@tomplum/react-git-log --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}